(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{100:function(e,t,a){"use strict";var n=a(0),r=a(99);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},101:function(e,t,a){"use strict";var n=a(0),r=a.n(n),l=a(100),b=a(97),c=a(48),i=a.n(c),p=37,O=39;t.a=function(e){var t=e.block,a=e.children,c=e.defaultValue,j=e.values,d=e.groupId,m=Object(l.a)(),u=m.tabGroupChoices,o=m.setTabGroupChoices,s=Object(n.useState)(c),g=s[0],N=s[1],y=Object(n.useState)(!1),f=y[0],v=y[1];if(null!=d){var h=u[d];null!=h&&h!==g&&j.some((function(e){return e.value===h}))&&N(h)}var T=function(e){N(e),null!=d&&o(d,e)},w=[],x=function(e){e.metaKey||e.altKey||e.ctrlKey||v(!0)},P=function(){v(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",x),window.addEventListener("mousedown",P)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(b.a)("tabs",{"tabs--block":t})},j.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(b.a)("tabs__item",i.a.tabItem,{"tabs__item--active":g===t}),style:f?{}:{outline:"none"},key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case O:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case p:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e),x(e)},onFocus:function(){return T(t)},onClick:function(){T(t),v(!1)},onPointerDown:function(){return v(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===g}))[0]))}},102:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},103:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},77:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return O})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(6),l=(a(0),a(95)),b=a(101),c=a(102),i=(a(98),{title:"Sample responses"}),p={unversionedId:"operations_sample_output",id:"operations_sample_output",isDocsHomePage:!1,title:"Sample responses",description:"Overview",source:"@site/docs/operations_sample_output.md",permalink:"/docs/docs/operations_sample_output",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/operations_sample_output.md",sidebar:"docs",previous:{title:"Endpoints",permalink:"/docs/docs/operations_endpoints"},next:{title:"Overview",permalink:"/docs/docs/satellite_overview"}},O=[{value:"Overview",id:"overview",children:[]},{value:"Operations File",id:"operations-file",children:[{value:"Sample response",id:"sample-response",children:[]},{value:"Properties",id:"properties",children:[]}]},{value:"Standard Geojson",id:"standard-geojson",children:[{value:"Sample Response",id:"sample-response-1",children:[]},{value:"Properties",id:"properties-1",children:[]}]}],j={rightToc:O};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},j,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"overview"},"Overview"),Object(l.b)("p",null,"This page shows and describes sample responses from Leaf API, along with a list\nof what properties you can expect for each type of data."),Object(l.b)("h2",{id:"operations-file"},"Operations File"),Object(l.b)("p",null,"Leaf returns operation file summaries in a standardized format. Summaries use\nthe point data to derive basic information about the operation and include links\nto the original files and images of an operation. Naturally, different\ntypes of operations contain different properties. For instance, an ",Object(l.b)("inlineCode",{parentName:"p"},"applied"),"\noperation will contain ",Object(l.b)("inlineCode",{parentName:"p"},"appliedRate"),", whereas a ",Object(l.b)("inlineCode",{parentName:"p"},"harvested")," operation will\ncontain ",Object(l.b)("inlineCode",{parentName:"p"},"wetMass")," and other Yield properties. The resource below shows a typical return. A list of\nall properties is available here."),Object(l.b)("p",null,"A list of the properties as well as a sample summary response for an operation\nfile is included below."),Object(l.b)("p",null,'An operation returned by Leaf can be an individual file or contain multiple\nindividual files (uploaded, merged or uploaded).\nIf the operation contains more than one individual file, another key is added to\nthe resource, the "sources" key, that is a list of individual file ids.'),Object(l.b)("h3",{id:"sample-response"},"Sample response"),Object(l.b)("p",null,"You can move through the three tabs below to see a sample of how Leaf returns\neach of the operation types."),Object(l.b)(b.a,{defaultValue:"harvested",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(l.b)("p",null,'This is an example of a summary for a "planted" operation'),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "createdTime": "2020-10-13T12:30:49",\n  "processedTime": "2020-10-13T12:38:12",\n  "lastUpdated": "2020-10-13T12:38:12",\n  "fieldId": "uuid",\n  "files": {\n      "original": "abc.com",\n      "rawGeojson": "abc.com",\n      "standardGeojson": "abc.com",\n      "zippedPNGs": "abc.com"\n  },\n  "summary": {\n      "type": "Feature",\n      "properties": {\n          "operationType": "planted",\n          "crop": "soybeans",\n          "totalArea": {\n              "value": 1032183,\n              "unit": "m2"\n          },\n          "startTime": "2015-09-23T20:29:01",\n          "endTime": "2015-09-23T20:31:46",\n          "elevation": {\n              "min": 220.0,\n              "max": 236.0,\n              "avg": 234.0,\n              "unit": "m"\n          },\n          "speed": {\n              "min": 0.0,\n              "max": 9.0,\n              "avg": 7.0,\n              "unit": "m/s"\n          },\n          "totalDistance": {\n              "value": 12270.32,\n              "unit": "m"\n          },\n          "machinery": [\n              {\n                  "machineName": "machine1", \n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              },\n              {\n                  "machineName": "machine2",\n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              }\n          ],       \n          "varieties": [{\n              "name": "var xx",\n              "description": "",\n              "totalPlanted": {\n                  "value": 14225476,\n                  "unit": "seeds"\n              },\n              "rate": {\n                  "min": 15.97,\n                  "max": 35.12,\n                  "avg": 28.32,\n                  "minTarget": 15.5,\n                  "maxTarget": 35.5,\n                  "avgTarget": 29.0,\n                  "unit": "seeds/m2"\n              },\n              "seedDepth": {\n                  "min": 20.0,\n                  "max": 26.0,\n                  "avg": 24.0,\n                  "unit": "cm or in"\n              },   \n              "area": {\n                  "value": 502312,\n                  "unit": "m2"\n              }\n          },\n          {\n              "name": "var yy",\n              "description": "",\n              "totalPlanted": {\n                  "value": 14825791,\n                  "unit": "seeds"\n              },       \n              "rate": {\n                  "min": 14.23,\n                  "max": 36.10,\n                  "avg": 27.98,\n                  "minTarget": 15.5,\n                  "maxTarget": 35.5,\n                  "avgTarget": 29.0,\n                  "unit": "seeds/m2"\n              },\n              "seedDepth": {\n                  "min": 20.0,\n                  "max": 26.0,\n                  "avg": 24.0,\n                  "unit": "cm or in"\n              },\n              "area": {\n                  "value": 529871,\n                  "unit": "m2"\n              }\n          }]\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n'))),Object(l.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(l.b)("p",null,'This is an example of a summary for an "applied" operation'),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "createdTime": "2020-10-13T20:28:31",\n  "processedTime": "2020-10-13T20:39:03",\n  "lastUpdated": "2020-10-13T20:39:03",\n  "fieldId": "uuid",\n  "files": {\n      "original": "abc.com",\n      "rawGeojson": "abc.com",\n      "standardGeojson": "abc.com",\n      "zippedPNGs": "abc.com"\n  },\n  "summary": {\n      "type": "Feature",\n      "properties": {        \n          "operationType": "applied",\n          "crop": "soybeans",\n          "totalArea": {\n              "value": 1032183,\n              "unit": "m2"\n          },\n          "startTime": "2015-11-23T20:29:01",\n          "endTime": "2015-11-23T20:31:46",\n          "elevation": {\n              "min": 220.0,\n              "max": 236.0,\n              "avg": 234.0,\n              "unit": "m"\n          },\n          "speed": {\n              "min": 0.0,\n              "max": 9.0,\n              "avg": 7.0,\n              "unit": "m/s"\n          },\n          "totalDistance": {\n              "value": 12270.32,\n              "unit": "m"\n          },\n          "machinery": [\n              {\n                  "machineName": "machine1", \n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              },\n              {\n                  "machineName": "machine2",\n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              }\n          ],      \n          "products": [{\n              "name": "28-0-0 UAN",\n              "description": "",\n              "totalApplied": {\n                  "value": 7208258,\n                  "unit": "gal"\n              },\n              "rate": {\n                  "min": 13.32,\n                  "max": 15.11,\n                  "avg": 14.10,\n                  "minTarget": 13.5,\n                  "maxTarget": 15.5,\n                  "avgTarget": 14.3,                \n                  "unit": "gal/m2"\n              },\n              "area": {\n                  "value": 511224,\n                  "unit": "m2"\n              }\n          },\n          {\n              "name": "Agrotain Plus",\n              "description": "",\n              "totalApplied": {\n                  "value": 570478,\n                  "unit": "lb"\n              },    \n              "rate": {\n                  "min": 1.1, \n                  "max": 1.3,\n                  "avg": 1.23,   \n                  "minTarget": 0.9,\n                  "maxTarget": 1.5,\n                  "avgTarget": 1.3,                             \n                  "unit": "lb/m2"\n              },\n              "area": {\n                  "value": 520714,\n                  "unit": "m2"\n              }\n          }]\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n'))),Object(l.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(l.b)("p",null,'This is an example of a summary for a "harvested" operation'),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "uuid",\n  "provider": "provider name",\n  "leafUserId": "uuid",\n  "apiOwnerUsername": "email",\n  "sourceFiles": [],\n  "status": "processed",\n  "origin": "provider or Leaf",\n  "createdTime": "2020-10-13T20:19:01",\n  "processedTime": "2020-10-13T21:25:53",\n  "lastUpdated": "2020-10-13T21:25:53",\n  "fieldId": "uuid",\n  "files": {\n      "original": "abc.com",\n      "rawGeojson": "abc.com",\n      "standardGeojson": "abc.com",\n      "zippedPNGs": "abc.com"\n  },\n  "summary": {\n      "type": "Feature",\n      "properties": {              \n          "operationType": "harvested",\n          "crop": "soybeans",\n          "totalArea": {\n              "value": 1032183,\n              "unit": "m2"\n          },\n          "startTime": "2015-12-23T20:29:01",\n          "endTime": "2015-12-29T20:31:46",\n          "elevation": {\n              "min": 220.0,\n              "max": 236.0,\n              "avg": 234.0,\n              "unit": "m"\n          },\n          "speed": {\n              "min": 0.0,\n              "max": 3.1,\n              "avg": 4.1,\n              "unit": "m/s"\n          },\n          "totalDistance": {\n              "value": 12270.32,\n              "unit": "m"\n          },\n          "machinery": [\n              {\n                  "machineName": "machine1", \n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              },\n              {\n                  "machineName": "machine2",\n                  "machineId": "uuid",\n                  "implementName": "",\n                  "implementId": "uuid"\n              }\n          ],       \n          "varieties": [{\n              "name": "var xx",\n              "description": "",\n              "wetMass": {\n                  "value": 238907,\n                  "unit": "kg"\n              },\n              "wetVolume": {\n                  "value": 123456,\n                  "unit": "liters"\n              },\n              "wetMassPerArea": {\n                  "value": 2.57908,\n                  "unit": "kg/m2"\n              },       \n              "wetVolumePerArea": {\n                  "value": 3.23456,\n                  "unit": "liters/m2"\n              },      \n              "dryMassPerArea": {\n                  "value": 2.5,\n                  "unit": "kg/m2"\n              },  \n              "dryVolumePerArea": {\n                  "value": 2.7,\n                  "unit": "l/m2"\n              },                        \n              "harvestMoisture": {\n                  "min": 15.0,\n                  "max": 22.1,\n                  "avg": 18.2,\n                  "unit": "%"\n              },   \n              "dryMass": {\n                  "value": 238907,\n                  "unit": "kg"\n              },\n              "dryVolume": {\n                  "value": 123456,\n                  "unit": "liters"\n              },\n              "area": {\n                  "value": 502312,\n                  "unit": "m2"\n              }\n          },\n          {\n              "name": "var yy",\n              "description": "",\n              "wetMass": {\n                  "value": 257908,\n                  "unit": "kg"\n              },       \n              "wetVolume": {\n                  "value": 123456,\n                  "unit": "liters"\n              },\n              "wetMassPerArea": {\n                  "value": 2.57908,\n                  "unit": "kg/m2"\n              },       \n              "wetVolumePerArea": {\n                  "value": 3.23456,\n                  "unit": "liters/m2"\n              },            \n              "harvestMoisture": {\n                  "min": 15.0,\n                  "max": 22.1,\n                  "avg": 18.2,\n                  "unit": "%"\n              },\n              "dryMass": {\n                  "value": 257908,\n                  "unit": "kg"\n              },  \n              "dryVolume": {\n                  "value": 123456,\n                  "unit": "liters"\n              },\n              "dryMassPerArea": {\n                  "value": 2.5,\n                  "unit": "kg/m2"\n              },  \n              "dryVolumePerArea": {\n                  "value": 2.7,\n                  "unit": "l/m2"\n              },\n              "area": {\n                  "value": 529871,\n                  "unit": "m2"\n              }\n          }]\n      },\n      "geometry": {\n          "type": "MultiPolygon",\n          "coordinates": [[[\n              [-89.80434894561768,40.47791686563837],\n              [-89.80756759643555,40.4757623387113],\n              [-89.80746030807495,40.47302011353734],\n              [-89.80475664138794,40.47070219301965],\n              [-89.80080842971802,40.47068586935202],\n              [-89.79797601699828,40.472709973879255],\n              [-89.7978687286377,40.47569704893722],\n              [-89.80117321014404,40.47808008455794],\n              [-89.80434894561768,40.47791686563837]\n          ]]]\n      }\n  }\n}\n')))),Object(l.b)("h3",{id:"properties"},"Properties"),Object(l.b)("p",null,'Select the tab you want to see "planted", "applied" or "harvested"'),Object(l.b)(b.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalPlanted"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int (number of seeds)")))),Object(l.b)("p",null,"  ","*"," = Always in response",Object(l.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests"),Object(l.b)("p",null,"[Here][sample_summary]"," you can see a sample summary as response for an operation file")),Object(l.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalApplied"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")))),Object(l.b)("p",null,"  ","*"," = Always in response",Object(l.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests"),Object(l.b)("p",null,"  ","[Here][sample_summary]"," you can see a sample summary as response for an operation file")),Object(l.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetVolume"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"totalWetMass"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict")))),Object(l.b)("p",null,"  ","*"," = Always in response",Object(l.b)("br",{parentName:"p"}),"\n","","*","*"," = Usually in response but not required to pass tests"),Object(l.b)("p",null,"  ","[Here][sample_summary]"," you can see a sample summary as response for an operation file"))),Object(l.b)("h2",{id:"standard-geojson"},"Standard Geojson"),Object(l.b)("p",null,"When the data is present in the original file, Leaf standardizes names and units\nto create the standardGeojson."),Object(l.b)("p",null,"Below we list all the properties in the standardGeojson."),Object(l.b)("h3",{id:"sample-response-1"},"Sample Response"),Object(l.b)("p",null,'Each operation file returns with a "standardgeojson" URL that allows you to download a full point dataset from the operation in a standardized geojson format. Below is an example of the format of each point in these files.'),Object(l.b)(b.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n    "type": "Point",\n    "coordinates": \n    [\n      -74.83762110788625,\n      28.686604864693564\n    ]\n  },\n  "properties": {\n    "distance": "float",\n    "heading": "float",\n    "speed": "float",\n    "elevation": "float",\n    "equipmentWidth": "float",\n    "recordingStatus": "string",\n    "machinery": ["string"],\n    "sectionId" : "int",\n    "timestamp": "string",\n    "operationType": "planted",\n    "crop": "string",\n    "variety": "string",\n    "area": "float",\n    "seedRate": "int",\n    "seedRateTarget": "int",\n    "seedDepth": "float",\n  }\n}\n'))),Object(l.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n    "type": "Point",\n    "coordinates": \n    [\n      -74.83762110788625,\n      28.686604864693564\n    ]\n  },\n  "properties": {\n    "distance": "float",\n    "heading": "float",\n    "speed": "float",\n    "elevation": "float",\n    "equipmentWidth": "float",\n    "recordingStatus": "string",\n    "machinery": ["string"],\n    "sectionId" : "int",\n    "timestamp": "string",\n    "operationType": "applied",\n    "crop": "string",\n    "area": "float",\n    "products": {\n      "type": "string",\n      "description": "string"\n    },\n    "appliedRate": "float",\n    "appliedRateTarget": "float",\n  }\n}\n'))),Object(l.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "type": "Feature",\n  "geometry": {\n    "type": "Point",\n    "coordinates": \n    [\n      -74.83762110788625,\n      28.686604864693564\n    ]\n  },\n  "properties": {\n    "distance": "float",\n    "heading": "float",\n    "speed": "float",\n    "elevation": "float",\n    "harvestMoisture": "float",\n    "equipmentWidth": "float",\n    "recordingStatus": "string",\n    "machinery": ["string"],\n    "sectionId" : "int",\n    "timestamp": "string",\n    "operationType": "harvested",\n    "crop": "string",\n    "variety": "string",\n    "area": "float",\n    "wetMass": "float",\n    "wetVolume": "float",\n    "wetMassPerArea": "float",\n    "wetVolumePerArea": "float",\n    "dryMass": "float",\n    "dryVolume": "float",\n    "dryMassPerArea": "float",\n    "dryVolumePerArea": "float"\n  }\n}\n')))),Object(l.b)("h3",{id:"properties-1"},"Properties"),Object(l.b)(b.a,{defaultValue:"planted",values:[{label:"Planted",value:"planted"},{label:"Applied",value:"applied"},{label:"Harvested",value:"harvested"}],mdxType:"Tabs"},Object(l.b)(c.a,{value:"planted",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "planted"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The rate of seeds planted at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being planted")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of strings"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedRateTarget"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seeds/m\xb2 or seeds/ac"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target rate of seeds to be planted at the point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"seedDepth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"cm"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The depth at which seeds were planted at point"))))),Object(l.b)(c.a,{value:"applied",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRate"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The amount of product being applied at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "applied"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"products"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dict"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tank mix including products and ratio")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"appliedRateTarget"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"fl.oz/ac or L/m\xb2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The target amount of product to be applied at the point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list of strings"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of machine and implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section"))))),Object(l.b)(c.a,{value:"harvested",mdxType:"TabItem"},Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"key"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"presence"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"type"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"example units"),Object(l.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"coords"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point (x,y)"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Point x,y")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"timestamp"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 date, complete and with Z. example: 2011-10-05T14:48:00.000Z")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Crop type (normalized)")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"area"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft\xb2 or m\xb2"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Area represented by point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"distance"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance travelled since previous point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"elevation"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Distance to sea level")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'string "harvested"')),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"equipmentWidth"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft or m"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Width of implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"recordingStatus"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Boolean"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Recording status of machine")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"harvestMoisture"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"%"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMass"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetMassPerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet mass harvested in that point divided by area")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolume"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wetVolumePerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"*"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"wet volume harvested in that point divided by area")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"variety"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The variety of seed being harvested")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"speed"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ft/s or m/s"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Speed of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"heading"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"degrees"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Heading of machine at point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"machinery"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"list"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"-"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"name of machine & implement")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMass"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb or kg"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryMassPerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"lb/ac or kg/ha"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry mass harvested in that point divided by area")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolume"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu or L"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dryVolumePerArea"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"float"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"bu/ac or L/ha"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"dry volume harvested in that point divided by area")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"sectionId"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"**"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"int"),Object(l.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ID of implement sensor section")))))),Object(l.b)("p",null,"*"," = Always in response",Object(l.b)("br",{parentName:"p"}),"\n","*","*"," = Usually in response but not required to pass tests"))}d.isMDXComponent=!0},95:function(e,t,a){"use strict";a.d(t,"a",(function(){return j})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),O=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},j=function(e){var t=O(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,b=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),j=O(a),m=n,u=j["".concat(b,".").concat(m)]||j[m]||d[m]||l;return a?r.a.createElement(u,c(c({ref:t},p),{},{components:a})):r.a.createElement(u,c({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,b=new Array(l);b[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:n,b[1]=c;for(var p=2;p<l;p++)b[p]=a[p];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},96:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},97:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},98:function(e,t,a){"use strict";a.d(t,"b",(function(){return l})),a.d(t,"a",(function(){return b}));var n=a(96),r=a(103);function l(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,l=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var l=void 0===n?{}:n,b=l.forcePrependBaseUrl,c=void 0!==b&&b,i=l.absolute,p=void 0!==i&&i;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(c)return t+a;var O=!a.startsWith(t)?t+a.replace(/^\//,""):a;return p?e+O:O}(l,a,e,t)}}}function b(e,t){return void 0===t&&(t={}),(0,l().withBaseUrl)(e,t)}},99:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r}}]);