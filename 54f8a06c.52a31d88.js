(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{100:function(e,t,a){"use strict";var n=a(0),r=Object(n.createContext)(void 0);t.a=r},101:function(e,t,a){"use strict";var n=a(0),r=a(100);t.a=function(){var e=Object(n.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},102:function(e,t,a){"use strict";var n=a(0),r=a.n(n),s=a(101),l=a(98),i=a(48),b=a.n(i),c=37,o=39;t.a=function(e){var t=e.block,a=e.children,i=e.defaultValue,d=e.values,p=e.groupId,O=Object(s.a)(),u=O.tabGroupChoices,j=O.setTabGroupChoices,m=Object(n.useState)(i),f=m[0],g=m[1],h=Object(n.useState)(!1),N=h[0],y=h[1];if(null!=p){var v=u[p];null!=v&&v!==f&&d.some((function(e){return e.value===v}))&&g(v)}var T=function(e){g(e),null!=p&&j(p,e)},E=[],I=function(e){e.metaKey||e.altKey||e.ctrlKey||y(!0)},w=function(){y(!1)};return Object(n.useEffect)((function(){window.addEventListener("keydown",I),window.addEventListener("mousedown",w)}),[]),r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":t})},d.map((function(e){var t=e.value,a=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===t,className:Object(l.a)("tabs__item",b.a.tabItem,{"tabs__item--active":f===t}),style:N?{}:{outline:"none"},key:t,ref:function(e){return E.push(e)},onKeyDown:function(e){!function(e,t,a){switch(a.keyCode){case o:!function(e,t){var a=e.indexOf(t)+1;e[a]?e[a].focus():e[0].focus()}(e,t);break;case c:!function(e,t){var a=e.indexOf(t)-1;e[a]?e[a].focus():e[e.length-1].focus()}(e,t)}}(E,e.target,e),I(e)},onFocus:function(){return T(t)},onClick:function(){T(t),y(!1)},onPointerDown:function(){return y(!1)}},a)}))),r.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},n.Children.toArray(a).filter((function(e){return e.props.value===f}))[0]))}},103:function(e,t,a){"use strict";var n=a(0),r=a.n(n);t.a=function(e){return r.a.createElement("div",null,e.children)}},104:function(e,t,a){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!n(e)}a.d(t,"b",(function(){return n})),a.d(t,"a",(function(){return r}))},68:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return o})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),s=(a(0),a(96)),l=a(102),i=a(103),b=(a(99),{title:"Endpoints"}),c={unversionedId:"field_boundaries_endpoints",id:"field_boundaries_endpoints",isDocsHomePage:!1,title:"Endpoints",description:"[1]//github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection",source:"@site/docs/field_boundaries_endpoints.md",permalink:"/docs/docs/field_boundaries_endpoints",editUrl:"https://github.com/Leaf-Agriculture/docs/tree/master/docs/field_boundaries_endpoints.md",sidebar:"docs",previous:{title:"Overview",permalink:"/docs/docs/field_boundaries_overview"},next:{title:"Overview",permalink:"/docs/docs/operations_overview"}},o=[{value:"About",id:"about",children:[]},{value:"Endpoints",id:"endpoints",children:[{value:"Get all fields",id:"get-all-fields",children:[]},{value:"Get a field",id:"get-a-field",children:[]},{value:"Create a field",id:"create-a-field",children:[]},{value:"Get all operations of a field",id:"get-all-operations-of-a-field",children:[]},{value:"Get an operation of a field",id:"get-an-operation-of-a-field",children:[]},{value:"Get Fields by geometry",id:"get-fields-by-geometry",children:[]},{value:"Get intersection of fields",id:"get-intersection-of-fields",children:[]},{value:"Delete a field",id:"delete-a-field",children:[]},{value:"Get all farms",id:"get-all-farms",children:[]},{value:"Get a farm",id:"get-a-farm",children:[]},{value:"Get all growers",id:"get-all-growers",children:[]},{value:"Get a grower",id:"get-a-grower",children:[]}]},{value:"REST Resources",id:"rest-resources",children:[{value:"Field Resource",id:"field-resource",children:[]},{value:"Operation Resource",id:"operation-resource",children:[]},{value:"Farm Resource",id:"farm-resource",children:[]},{value:"Grower Resource",id:"grower-resource",children:[]}]}],d={rightToc:o};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)("h2",{id:"about"},"About"),Object(s.b)("p",null,"Here we list all the available endpoints from Fields API. For easily\ncalling them, we recommend using ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/Leaf-Agriculture/Leaf-quickstart-Postman-collection"}),"Leaf's Postman collection"),"."),Object(s.b)("p",null,"All HTTP methods should be prepended by this service's endpoint:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{}),"https://api.withleaf.io/services/fields/api\n")),Object(s.b)("p",null,"There is a ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#rest-resources"}),"REST resources")," section if you want to check it out."),Object(s.b)("p",null,"This service has the following endpoints available:"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-fields"}),"Get all fields")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/fields"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-field"}),"Get a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#create-a-field"}),"Create a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-operations-of-a-field"}),"Get all operations of a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}/operations"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-an-operation-of-a-field"}),"Get an operation of a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}/operations/{id}"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-fields-by-geometry"}),"Get fields by geometry")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/fields/query/intersects"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-intersection-of-fields"}),"Get intersection of fields")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/intersect"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#delete-a-field"}),"Delete a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-farms"}),"Get all farms")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/farms"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-farm"}),"Get a farm")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/farms/{id}"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-growers"}),"Get all growers")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/growers"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-grower"}),"Get a grower")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/growers/{id}"))))),Object(s.b)("h2",{id:"endpoints"},"Endpoints"),Object(s.b)("h3",{id:"get-all-fields"},"Get all fields"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/fields")),Object(s.b)("p",null,"Gets a paged list of Fields. It is possible to filter the results by passing\nsome query parameters."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"leafUserId"),", only matches files from this user (string)."),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (defaults to 20)")),Object(s.b)("p",null,"These last two parameters are used exclusively for paging through results."),Object(s.b)("h4",{id:"response"},"Response"),Object(s.b)("p",null,"A JSON array containing Fields."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"res"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/fields'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/fields'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/fields'\n"))),Object(s.b)(i.a,{value:"res",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": "3031c20d-4331-4a24-bac0-c27087fc901f",\n    "name": "str",\n    "leafUserId": "5db46916-54a0-4b38-a9b1-d8e00673db63",\n    "providerName": "JohnDeere",\n    "providerFieldName": "Right side by the lake",\n    "providerId": 2,\n    "providerFieldId": "48926e0d-9bb7-4618-9214-3c2bf50d9ac2",\n    "providerBoundaryId": "5bfab976-df1b-44c7-ab83-ee5befdd45af",\n    "organizationId": "469039",\n    "type": "ORIGINAL",\n    "farmId": 1530952,\n    "geometry": {\n      "type": "MultiPolygon",\n      "coordinates": [\n        [\n          [\n            [\n                -48.62195051987687,\n                -27.35030179570155\n            ],\n            [\n                -48.62099028904954,\n                -27.351783623790567\n            ],\n            [\n                -48.61883379300156,\n                -27.349906320545184\n            ],\n            [\n                -48.619777930574806,\n                -27.34842446734229\n            ],\n            [\n                -48.62195051987687,\n                -27.35030179570155\n            ]\n          ]\n        ]\n      ]\n    }\n  }\n]\n')))),Object(s.b)("h3",{id:"get-a-field"},"Get a field"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields/{id}")),Object(s.b)("p",null,"Gets a single Field by its id."),Object(s.b)("h4",{id:"response-1"},"Response"),Object(s.b)("p",null,"A single ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"#field-resource"}),"Field")," as a JSON object."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{id}'\n")))),Object(s.b)("h3",{id:"create-a-field"},"Create a field"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields")),Object(s.b)("p",null,"Creates a Field for the user ",Object(s.b)("inlineCode",{parentName:"p"},"leafUserId"),". A resquest body must be provided\ncontaining the an entry ",Object(s.b)("inlineCode",{parentName:"p"},'"geometry"'),", which represents the boundaries of the\nField being created as a GeoJSON geometry (it must be a ",Object(s.b)("inlineCode",{parentName:"p"},'"MultiPolygon"'),").\nThe entry ",Object(s.b)("inlineCode",{parentName:"p"},'"id"')," is optional. If no id is provided, an UUID will be generated.\nThe Field id CAN NOT be updated."),Object(s.b)("p",null,"Request body example:"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [\n      [\n        [\n          [-93.48821327980518, 41.77137549568163],\n          [-93.48817333680519, 41.77143534378164],\n          [-93.48821327390516, 41.76068857977987],\n          [-93.48821327980518, 41.77137549568163]\n        ]\n      ]\n    ]\n  }\n}\n')),Object(s.b)("h4",{id:"response-2"},"Response"),Object(s.b)("p",null,"A Field as a JSON object."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = {\n  geometry: {\n    type: \"MultiPolygon\",\n    coordinates: [...]\n  }\n}\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\ndata = {\n  'geometry': {\n    'type': \"MultiPolygon\",\n    'coordinates': [...]\n  }\n}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'curl -X POST \\\n    -H \'Authorization: Bearer YOUR_TOKEN\' \\\n    -d \'{ "geometry": { "type: "MultiPolygon", "geometry": [...] } }\'\n    \'https://api.withleaf.io/services/fields/api/fields/users/{leafUserId}/{id}\'\n')))),Object(s.b)("h3",{id:"get-all-operations-of-a-field"},"Get all operations of a field"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields/{id}/operations")),Object(s.b)("p",null,"Gets a paged list of all operation files of the Field and Leaf User specified in\nthe URL."),Object(s.b)("p",null,"It is possible to filter the results by passing some query\nparameters. They are listed below."),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Parameter (to filter by)"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"operationType"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'String "harvested", "planted", "applied" or "other"'),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations of given type")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"provider"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'String "CNHI", "JohnDeere", "Trimble" or "ClimateFieldView"'),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations of given provider")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"origin"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'String "provider", "automerged", "merged" or "uploaded"'),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations of given origin")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"crop"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),'String name of the crop, like "corn" or "soybeans". Entire crop list available ',Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"crops"}),"here")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations with this crop.")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"startTime"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations that started after this date")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"endTime"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ISO 8601 datetime format"),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"retrieve operations that ended before this date")))),Object(s.b)("p",null,"You can also pass some parameters used exclusively for paging through results.\nThey are:"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (defaults to 20)")),Object(s.b)("h4",{id:"response-3"},"Response"),Object(s.b)("p",null,"A JSON array of Files."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations'\n")))),Object(s.b)("h3",{id:"get-an-operation-of-a-field"},"Get an operation of a field"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields/{id}/operations/{id}")),Object(s.b)("p",null,"Gets a single Operation File of a field by its id."),Object(s.b)("h4",{id:"response-4"},"Response"),Object(s.b)("p",null,"A single Operation File."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"cURL",value:"sh"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/users/{leafUserId}/fields/{fieldId}/operations/{id}'\n")))),Object(s.b)("h3",{id:"get-fields-by-geometry"},"Get Fields by geometry"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"p"},"/fields/query/intersects")),Object(s.b)("p",null,"Gets a list of fields that intersect with the GeoJSON MultiPolygon sent in\nthe request body."),Object(s.b)("h4",{id:"response-5"},"Response"),Object(s.b)("p",null,"A JSON list of Fields."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON sample response",value:"json"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/fields/query/intersects'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\nconst data = {\n  geometry: {\n    type: \"MultiPolygon\",\n    coordinates: [...]\n  }\n}\n\naxios.post(endpoint, { headers, data })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/query/intersects'\nheaders = {'Authorization': 'Bearer YOUR_LEAF_TOKEN'}\n\ndata = {\n  'geometry': {\n    'type': \"MultiPolygon\",\n    'coordinates': [...]\n  }\n}\n\nresponse = requests.post(endpoint, headers=headers, json=data)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'curl -X POST \\\n    -H \'Authorization: Bearer YOUR_TOKEN\' \\\n    -d \'{ "geometry": { "type: "MultiPolygon", "geometry": [...] } }\'\n    \'https://api.withleaf.io/services/fields/api/fields/query/intersects\'\n'))),Object(s.b)(i.a,{value:"json",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),'[\n  {\n    "id": "id",\n    "leafUserId": "uuid",\n    "geometry": {\n      "type": "MultiPolygon",\n      "coordinates": [\n        [\n          [\n            [-89.84388470649719,39.71943436012731],\n            [-89.84392762184143,39.72439389620628],\n            [-89.83936786651611,39.725392361998416],\n            [-89.83928203582764,39.71951688444436],\n            [-89.84388470649719,39.71943436012731]\n          ]\n        ]\n      ]\n    },\n    "type": "MERGED",\n    "sources": []\n  }\n]\n')))),Object(s.b)("h3",{id:"get-intersection-of-fields"},"Get intersection of fields"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields/intersect")),Object(s.b)("p",null,"Gets a GeoJSON MultiPolygon corresponding to the intersection of the Fields\nspecified by the given id's. Such Field id's goes in a list, in the request\nbody."),Object(s.b)("h4",{id:"response-6"},"Response"),Object(s.b)("p",null,"A JSON in the format of a GeoJSON geometry."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON sample response",value:"json"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"var axios = require('axios');\nvar data = JSON.stringify([\"id1\",\"id2\"]);\n\nvar config = {\n  method: 'post',\n  url: 'https://api.withleaf.io/services/fields/api/users/{id}/fields/intersect',\n  headers: {\n    'Authorization': 'Bearer YOUR_LEAF_TOKEN',\n    'Content-Type': 'application/json'\n  },\n  data : data\n};\n\naxios(config)\n.then(function (response) {\n  console.log(JSON.stringify(response.data));\n})\n.catch(function (error) {\n  console.log(error);\n});\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'import requests\n\nurl = "https://api.withleaf.io/services/fields/api/users/{id}/fields/intersect"\n\npayload = "[\\"id1\\", \\"id2\\"]"\nheaders = {\n  \'Authorization\': \'Bearer YOUR_LEAF_TOKEN\',\n  \'Content-Type\': \'application/json\'\n}\n\nresponse = requests.request("POST", url, headers=headers, data = payload)\n'))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl --location --request \\\nPOST 'https://api.withleaf.io/services/fields/api/users/{id}/fields/intersect' \\\n--header 'Authorization: Bearer YOUR_LEAF_TOKEN' \\\n--header 'Content-Type: application/json' \\\n--data-raw '[\"id1\", \"id2\"]'\n"))),Object(s.b)(i.a,{value:"json",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n    "type": "MultiPolygon",\n    "coordinates": [\n        [\n            [\n                [-89.84388470649719,39.71943436012731],\n                [-89.84392762184143,39.72439389620628],\n                [-89.83936786651611,39.725392361998416],\n                [-89.83928203582764,39.71951688444436],\n                [-89.84388470649719,39.71943436012731]\n            ]\n        ]\n    ]\n}\n')))),Object(s.b)("h3",{id:"delete-a-field"},"Delete a field"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/fields/{id}")),Object(s.b)("p",null,"Deletes the field with the given id."),Object(s.b)("h3",{id:"get-all-farms"},"Get all farms"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/farms")),Object(s.b)("p",null,"Gets a paged list of all Farms. It is possible to pass some query parameters."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"provider"),", only matches Farms from this provider (string)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"leafUserId"),", only matches Farms from this Leaf User (UUID)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (defaults to 20)")),Object(s.b)("p",null,"The parameters are used exclusively for paging through results."),Object(s.b)("h4",{id:"response-7"},"Response"),Object(s.b)("p",null,"A JSON array containing Farms."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"res"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/farms'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/farms'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/farms'\n"))),Object(s.b)(i.a,{value:"res",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": 1538766,\n    "name": "name",\n    "providerId": 2,\n    "providerName": "JohnDeere",\n    "providerFarmId": "00000000-0000-0000-0000-000000000000",\n    "leafUserId": "00000000-0000-0000-0000-000000000000",\n    "fieldIds": ["00000000-0000-0000-0000-000000000000"],\n    "growerId": 12345\n  }\n]\n')))),Object(s.b)("h3",{id:"get-a-farm"},"Get a farm"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/users/{id}/farms/{id}")),Object(s.b)("p",null,"Gets a single Farm by its id."),Object(s.b)("h4",{id:"response-8"},"Response"),Object(s.b)("p",null,"A single Farm as a JSON object."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"res"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/farms/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/users/{leafUserId}/farms/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/users/{leafUserId}/farms/{id}'\n"))),Object(s.b)(i.a,{value:"res",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": 1551010,\n  "name": "name",\n  "providerName": "JohnDeere",\n  "providerFarmId": "00000000-0000-0000-0000-000000000000",\n  "leafUserId": "00000000-0000-0000-0000-000000000000",\n  "fieldIds": ["00000000-0000-0000-0000-000000000000"],\n  "growerId": 123\n}\n')))),Object(s.b)("h3",{id:"get-all-growers"},"Get all growers"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/growers")),Object(s.b)("p",null,"Gets a paged list of all Growers. Use the following parameters for paging\nthrough results."),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"provider"),", only matches Growers from this provider (string)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"leafUserId"),", only matches Growers from this Leaf User (UUID)"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"page"),", an integer specifying the page being fetched"),Object(s.b)("li",{parentName:"ul"},Object(s.b)("inlineCode",{parentName:"li"},"size"),", an integer specifying the size of the page (defaults to 20)")),Object(s.b)("h4",{id:"response-9"},"Response"),Object(s.b)("p",null,"A JSON array containing Growers."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"res"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint ='https://api.withleaf.io/services/fields/api/growers'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/growers'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/growers'\n"))),Object(s.b)(i.a,{value:"res",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'[\n  {\n    "id": 2345,\n    "leafUserId": "UUID",\n    "providerName": "str",\n    "providerOrganizationId": "str",\n    "providerCompanyId": "str",\n    "providerUserId": "str",\n    "providerGrowerId": "str",\n    "farmIds": [4534]\n  }\n]\n')))),Object(s.b)("h3",{id:"get-a-grower"},"Get a grower"),Object(s.b)("p",null,"\xa0",Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"p"},"/growers/{id}")),Object(s.b)("p",null,"Gets a single Grower by its id."),Object(s.b)("h4",{id:"response-10"},"Response"),Object(s.b)("p",null,"A single Grower as a JSON object."),Object(s.b)(l.a,{defaultValue:"sh",values:[{label:"cURL",value:"sh"},{label:"Python",value:"py"},{label:"JavaScript",value:"js"},{label:"JSON Response",value:"res"}],mdxType:"Tabs"},Object(s.b)(i.a,{value:"js",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const axios = require('axios')\nconst TOKEN = 'YOUR_TOKEN'\n\nconst endpoint = 'https://api.withleaf.io/services/fields/api/growers/{id}'\nconst headers = { 'Authorization': `Bearer ${TOKEN}` }\n\naxios.get(endpoint, { headers })\n    .then(res => console.log(res.data))\n    .catch(console.error)\n"))),Object(s.b)(i.a,{value:"py",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"import requests\n\nTOKEN = 'YOUR_TOKEN'\n\nendpoint = 'https://api.withleaf.io/services/fields/api/growers/{id}'\nheaders = {'Authorization': f'Bearer {TOKEN}'}\n\nresponse = requests.get(endpoint, headers=headers)\nprint(response.json())\n"))),Object(s.b)(i.a,{value:"sh",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"curl -X GET \\\n    -H 'Authorization: Bearer YOUR_TOKEN' \\\n    'https://api.withleaf.io/services/fields/api/growers/{id}'\n"))),Object(s.b)(i.a,{value:"res",mdxType:"TabItem"},Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": 2345,\n  "leafUserId": "UUID",\n  "providerName": "str",\n  "providerOrganizationId": "str",\n  "providerCompanyId": "str",\n  "providerUserId": "str",\n  "providerGrowerId": "str",\n  "farmIds": [4534]\n}\n')))),Object(s.b)("h2",{id:"rest-resources"},"REST Resources"),Object(s.b)("p",null,"See below the REST resources and their endpoints."),Object(s.b)("h3",{id:"field-resource"},"Field Resource"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "UUID",\n  "providerName": "str",\n  "providerFieldName": "str",\n  "providerFieldId": "str",\n  "providerFieldName": "str",\n  "providerBoundaryId": "UUID",\n  "type": "ORIGINAL",\n  "leafUserId": "UUID",\n  "organizationId": "str",\n  "mergedFieldId": ["UUID"],\n  "files": ["UUID"],\n  "geometry": {\n    "type": "MultiPolygon",\n    "coordinates": [\n      [\n        [\n          [-93.48821327980518, 41.77137549568163],\n          [-93.48817333680519, 41.77143534378164],\n          [-93.48821327390516, 41.76068857977987],\n          [-93.48821327980518, 41.77137549568163]\n        ]\n      ]\n    ]\n  },\n}\n')),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-fields"}),"Get all fields")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/fields"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-field"}),"Get a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#create-a-field"}),"Create a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-fields-by-geometry"}),"Get fields by geometry")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/fields/query/intersects"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-intersection-of-fields"}),"Get intersection of fields")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--warning"},"POST")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/intersect"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#delete-a-field"}),"Delete a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--danger"},"DELETE")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}"))))),Object(s.b)("h3",{id:"operation-resource"},"Operation Resource"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "UUID",\n  "operationType": "harvested|planted|applied",\n  "startTime": "ISO date-time",\n  "endTime": "ISO date-time",\n  "crops": ["str"],\n  "varieties": ["str"],\n  "providerFileId": "str",\n  "provider": "Trimble",\n  "origin": "provider|merged|automerged|uploaded",\n  "leafUserId": "UUID"\n}\n')),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-operations-of-a-field"}),"Get all operations of a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}/operations"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-an-operation-of-a-field"}),"Get an operation of a field")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/fields/{id}/operations/{id}"))))),Object(s.b)("h3",{id:"farm-resource"},"Farm Resource"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": "long",\n  "name": "str",\n  "providerName": "str",\n  "providerFarmName": "str",\n  "providerFarmId": "UUID",\n  "leafUserId": "UUID",\n  "growerId": "long",\n  "fieldIds": ["UUID"]\n}\n')),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-farms"}),"Get all farms")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/farms"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-farm"}),"Get a farm")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/users/{id}/farms/{id}"))))),Object(s.b)("h3",{id:"grower-resource"},"Grower Resource"),Object(s.b)("pre",null,Object(s.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "id": 2345,\n  "leafUserId": "UUID",\n  "providerName": "str",\n  "providerOrganizationId": "str",\n  "providerCompanyId": "str",\n  "providerUserId": "str",\n  "providerGrowerId": "str",\n  "farmIds": [4534]\n}\n')),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(s.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Endpoints"))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-all-growers"}),"Get all growers")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/growers"))),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("a",Object(n.a)({parentName:"td"},{href:"#get-a-grower"}),"Get a grower")),Object(s.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(s.b)("span",{class:"badge badge--success"},"GET")," ",Object(s.b)("inlineCode",{parentName:"td"},"/growers/{id}"))))))}p.isMDXComponent=!0},96:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),o=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=o(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=b(e,["components","mdxType","originalType","parentName"]),d=o(a),O=n,u=d["".concat(l,".").concat(O)]||d[O]||p[O]||s;return a?r.a.createElement(u,i(i({ref:t},c),{},{components:a})):r.a.createElement(u,i({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,l=new Array(s);l[0]=O;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<s;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},97:function(e,t,a){"use strict";var n=a(0),r=a(20);t.a=function(){var e=Object(n.useContext)(r.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},98:function(e,t,a){"use strict";function n(e){var t,a,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(r&&(r+=" "),r+=a);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,a=0,r="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(r&&(r+=" "),r+=t);return r}},99:function(e,t,a){"use strict";a.d(t,"b",(function(){return s})),a.d(t,"a",(function(){return l}));var n=a(97),r=a(104);function s(){var e=Object(n.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,a=void 0===t?"/":t,s=e.url;return{withBaseUrl:function(e,t){return function(e,t,a,n){var s=void 0===n?{}:n,l=s.forcePrependBaseUrl,i=void 0!==l&&l,b=s.absolute,c=void 0!==b&&b;if(!a)return a;if(a.startsWith("#"))return a;if(Object(r.b)(a))return a;if(i)return t+a;var o=!a.startsWith(t)?t+a.replace(/^\//,""):a;return c?e+o:o}(s,a,e,t)}}}function l(e,t){return void 0===t&&(t={}),(0,s().withBaseUrl)(e,t)}}}]);